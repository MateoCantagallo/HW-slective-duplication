======================================================================
  PERCENTAGE-BASED DUPLICATION MODE COMPARISON REPORT (DYNAMIC POWER FOCUS)
======================================================================
Generated on: jue 03 jul 2025 20:33:23 -03
Test Configuration: test.arg
Instructions Simulated: 10000000000
JSON Profile Source: static_inst_profile.json
Percentage Levels Tested: 5 10 20 50%

======================================================================
                         SUMMARY COMPARISON
======================================================================

Performance Metrics Comparison:
================================
Instructions Committed:
  Baseline:  2200196
  5% Sel:  2200196
  10% Sel:  2200196
  20% Sel:  2200196
  50% Sel:  2200196
  Legacy:    2200196

Simulation Cycles:
  Baseline:  825450
  5% Sel:  850449
  10% Sel:  892116
  20% Sel:  950450
  50% Sel:  1125453
  Legacy:    1513004
  üìä Differences vs Baseline:
    5% Sel: 24999 cycles
    10% Sel: 66666 cycles
    20% Sel: 125000 cycles
    50% Sel: 300003 cycles
    Legacy:    687554 cycles

Instructions Per Cycle (IPC):
  Baseline:  2.6655
  5% Sel:  2.5871
  10% Sel:  2.4663
  20% Sel:  2.3149
  50% Sel:  1.9549
  Legacy:    1.4542

Duplication Statistics:
======================
Instructions Added in Rename:
  Baseline:  
  5% Sel:  200004
  10% Sel:  300004
  20% Sel:  400012
  50% Sel:  1000013
  Legacy:    1925231
  ‚úì 5% mode loaded 2 addresses successfully
  ‚úì 10% mode loaded 3 addresses successfully
  ‚úì 20% mode loaded 5 addresses successfully
  ‚úì 50% mode loaded 12 addresses successfully

Dynamic Power Consumption Analysis:
===================================

CC1 Power (Aggressive Power Gating):
  Baseline:  45.5872 W
  5% Sel:  53.6285 W
  10% Sel:  55.2035 W
  20% Sel:  54.9318 W
  50% Sel:  60.4143 W
  Legacy:    66.0065 W
  üìà Percentage increase vs Baseline:
    5% Sel: 17.00%
    10% Sel: 21.00%
    20% Sel: 20.00%
    50% Sel: 32.00%
    Legacy:    44.00%

CC2 Power (Proportional Scaling):
  Baseline:  34.5911 W
  5% Sel:  37.2986 W
  10% Sel:  37.7230 W
  20% Sel:  37.6653 W
  50% Sel:  40.1056 W
  Legacy:    41.6650 W
  üìà Percentage increase vs Baseline:
    5% Sel: 7.00%
    10% Sel: 9.00%
    20% Sel: 8.00%
    50% Sel: 15.00%
    Legacy:    20.00%

CC3 Power (Conservative with Leakage):
  Baseline:  39.1646 W
  5% Sel:  41.1242 W
  10% Sel:  41.3923 W
  20% Sel:  41.3629 W
  50% Sel:  43.2575 W
  Legacy:    44.2034 W
  üìà Percentage increase vs Baseline:
    5% Sel: 5.00%
    10% Sel: 5.00%
    20% Sel: 5.00%
    50% Sel: 10.00%
    Legacy:    12.00%

Power Model Explanation:
========================
CC1 (Aggressive): Uses full power when active, aggressive power gating
CC2 (Proportional): Linear scaling based on actual resource utilization
CC3 (Conservative): Same as CC2 but includes leakage power when idle

Cache Performance:
==================
il1 Cache:
  Accesses - Baseline: 2200378, Legacy: 2200312
           5% Sel: 2200354
           10% Sel: 2200354
           20% Sel: 2200347
           50% Sel: 2200363
  Miss Rate - Baseline: 0.0000, Legacy: 0.0000
            5% Sel: 0.0000
            10% Sel: 0.0000
            20% Sel: 0.0000
            50% Sel: 0.0000

dl1 Cache:
  Accesses - Baseline: 275037, Legacy: 550055
           5% Sel: 275037
           10% Sel: 275037
           20% Sel: 300037
           50% Sel: 475037
  Miss Rate - Baseline: 0.0000, Legacy: 0.0000
            5% Sel: 0.0000
            10% Sel: 0.0000
            20% Sel: 0.0000
            50% Sel: 0.0000

ul2 Cache:
  Accesses - Baseline: 7, Legacy: 7
           5% Sel: 7
           10% Sel: 7
           20% Sel: 7
           50% Sel: 7
  Miss Rate - Baseline: 0.4286, Legacy: 0.4286
            5% Sel: 0.4286
            10% Sel: 0.4286
            20% Sel: 0.4286
            50% Sel: 0.4286

Functional Unit Usage:
======================
Baseline Mode FU Usage:
  No FU usage statistics found in baseline output

Selective 5% Mode FU Usage:
integer-ALU (busy for 850087 cycles
) integer-ALU (busy for 712570 cycles
) integer-ALU (busy for 487552 cycles
) integer-ALU (busy for 150030 cycles
FP-adder (busy for 400008 cycles

Selective 10% Mode FU Usage:
integer-ALU (busy for 858421 cycles
) integer-ALU (busy for 720905 cycles
) integer-ALU (busy for 479217 cycles
) integer-ALU (busy for 141697 cycles
FP-adder (busy for 466674 cycles

Selective 20% Mode FU Usage:
integer-ALU (busy for 875088 cycles
) integer-ALU (busy for 762568 cycles
) integer-ALU (busy for 437550 cycles
) integer-ALU (busy for 125030 cycles
FP-adder (busy for 550008 cycles

Selective 50% Mode FU Usage:
integer-ALU (busy for 1025090 cycles
) integer-ALU (busy for 787570 cycles
) integer-ALU (busy for 312546 cycles
) integer-ALU (busy for 75031 cycles
FP-adder (busy for 900016 cycles

Legacy Mode FU Usage:
integer-ALU (busy for 1375126 cycles
) integer-ALU (busy for 825067 cycles
) integer-ALU (busy for 0 cycles
) integer-ALU (busy for 0 cycles
FP-adder (busy for 1512643 cycles

Error Analysis:
===============
Error/Warning Count:
  Baseline:  6
  5% Sel:  6
  10% Sel:  6
  20% Sel:  6
  50% Sel:  6
  Legacy:    6
  ‚ö†Ô∏è  Errors detected in simulation output
  Baseline errors:
Thread_0_bpred_bimod.bpred_jr_rate <error: divide by zero> # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
Thread_0_bpred_bimod.bpred_jr_non_ras_rate.PP <error: divide by zero> # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
Thread_0_bpred_bimod.ras_rate.PP <error: divide by zero> # RAS prediction rate (i.e., RAS hits/used RAS)
  5% Selective errors:
Thread_0_bpred_bimod.bpred_jr_rate <error: divide by zero> # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
Thread_0_bpred_bimod.bpred_jr_non_ras_rate.PP <error: divide by zero> # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
Thread_0_bpred_bimod.ras_rate.PP <error: divide by zero> # RAS prediction rate (i.e., RAS hits/used RAS)
  10% Selective errors:
Thread_0_bpred_bimod.bpred_jr_rate <error: divide by zero> # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
Thread_0_bpred_bimod.bpred_jr_non_ras_rate.PP <error: divide by zero> # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
Thread_0_bpred_bimod.ras_rate.PP <error: divide by zero> # RAS prediction rate (i.e., RAS hits/used RAS)
  20% Selective errors:
Thread_0_bpred_bimod.bpred_jr_rate <error: divide by zero> # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
Thread_0_bpred_bimod.bpred_jr_non_ras_rate.PP <error: divide by zero> # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
Thread_0_bpred_bimod.ras_rate.PP <error: divide by zero> # RAS prediction rate (i.e., RAS hits/used RAS)
  50% Selective errors:
Thread_0_bpred_bimod.bpred_jr_rate <error: divide by zero> # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
Thread_0_bpred_bimod.bpred_jr_non_ras_rate.PP <error: divide by zero> # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
Thread_0_bpred_bimod.ras_rate.PP <error: divide by zero> # RAS prediction rate (i.e., RAS hits/used RAS)
  Legacy errors:
Thread_0_bpred_bimod.bpred_jr_rate <error: divide by zero> # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
Thread_0_bpred_bimod.bpred_jr_non_ras_rate.PP <error: divide by zero> # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
Thread_0_bpred_bimod.ras_rate.PP <error: divide by zero> # RAS prediction rate (i.e., RAS hits/used RAS)

======================================================================
                         FILE INFORMATION
======================================================================
Full output files:
  Baseline mode:  baseline_output.txt
  5% Sel mode:  selective_5percent_output.txt
  10% Sel mode:  selective_10percent_output.txt
  20% Sel mode:  selective_20percent_output.txt
  50% Sel mode:  selective_50percent_output.txt
  Legacy mode:    legacy_output.txt
  This report:    comparison_report.txt

Address files:
  5% addresses: addresses_5percent.txt
  10% addresses: addresses_10percent.txt
  20% addresses: addresses_20percent.txt
  50% addresses: addresses_50percent.txt

File sizes:
  Baseline output:  637 lines, 36K
  5% Sel output:  728 lines, 36K
  10% Sel output:  728 lines, 36K
  20% Sel output:  728 lines, 36K
  50% Sel output:  728 lines, 36K
  Legacy output:    727 lines, 36K
